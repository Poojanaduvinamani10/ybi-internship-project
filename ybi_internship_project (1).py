# -*- coding: utf-8 -*-
"""YBI Internship Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18fJhs1viRW0rEwIymCxCVrhQKBvKV49W

Import Library
"""

import pandas as pd

import numpy as np

"""import CSV as Data Frame
use URL of file directly

"""

import pandas as pd

import numpy as np

"""Import CSV as DataFrame

Use URL of the file directly
"""

df = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/refs/heads/main/Servo%20Mechanism.csv')

"""or  use file path in jupyter Notebook"""

# df = pd.read_csv(r'c:\Users\YBI Foundation\Desktop\Servo Mechanism.csv')

"""or use file path after uploading file in Google Colab Notebook"""

# df = pd.read_csv(r'/content/servo Mechanism.csv')

"""Get the First five Rows of Dataframe"""

df.head()

"""Get Information of DataFrame"""

df.info()

"""Get the Summary Statistics"""

df.describe()

"""Get Columns Names"""



df.columns

"""Get Shape of dataFrame"""

df.shape

"""Get Categories and Counts of Categorical Varibles"""

df[['Motor']].value_counts()

df[['Screw']].value_counts()

"""Get Encoding of Categorical Features"""

df.replace({'Motor':{'A':0,'B':1,'C':2,'D' : 3,'E' :4}},inplace=True)

df.replace({'Screw':{'A':0,'B':1,'C':2,'D' : 3,'E' :4}},inplace=True)

"""Define y (dependent or label or target variable) and x (independent or features or attribute variables)"""

y=df['Class']

y.shape

y

x = df[['Motor','Screw','Pgain','Vgain']]

"""or use.drop function to define X"""

x = df.drop('Class',axis=1)

x.shape

x

"""Get Train Test Split"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=2529)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

"""Get Model Train"""

from sklearn.linear_model import LinearRegression

lr=LinearRegression()

lr.fit(x_train,y_train)

"""Get Model Prediction"""

y_pred=lr.predict(x_test)

y_pred.shape

y_pred

"""Get model Evaluation"""

from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score

mean_squared_error(y_test,y_pred)

mean_absolute_error(y_test,y_pred)

r2_score(y_test,y_pred)

"""Get Visualization of Actual vs predicted Results"""

import matplotlib.pyplot as plt
plt.scatter(y_test,y_pred)
plt.xlabel("Actual")
plt.ylabel("Predicted")
plt.title("Actual vs Predicted")
plt.show()

"""Get future predictions

let select a random sample from existing dataset as new value
steps to follow

1.Extarct a random row using sample function
2.Separate x abd y
3.standard x
4.Predict
"""

x_new=df.sample(1)

x_new

x_new.shape

x_new=x_new.drop('Class',axis=1)

x_new

x_new.shape

y_pred_new=lr.predict(x_new)

y_pred_new